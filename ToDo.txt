Things that I want to work on...

Near term / in progress
- Clean up
	- Transform - make it consistent and clear when the transposed or not version is being used
- Scene serialisation
- Mouse picking
- Rendering, Materials and lighting
	- manage bindings where things only need to be bound once per frame, or once unless changed (e.g. skybox texture)
	- have each render step set the state, rather than rely on the default state
	- create a render pipeline to manage stages
	- Skybox only used in perspective
	- Shadows... endless work to make it better.
		- Move directional light/shadows to a distinct class/file
		- cascading shadow maps
		- enable shadowmap to be resized
		- not just blindly use the view camera far plane distance
		- add more filtering
- Model/mesh loading
- Scene UI work
	- maintain focus on selected entity on destroy
	- auto expand hierarchy on create
	- load new textures
	- load new skybox textures
	- model loading
	- Texture gizmo add aspect ratio setting/locking
- ECS
	- create systems rather than hard coding in scene
	- use case of mulitple components for a single entity
	- HasComponents test for multiple components at time
	- Callback method for when a component is added to allow an initialisation if required. (e.g. via the gui adding a camera needs the aspect ratio set)
	- Work out a way to register components better than current Componets class
- Particle system
	- add an emit direction, and use transform to change it
- Bugs
	- Skybox doesn't check that it's valid before rendering
	- Deleting main camera causing things to crash
	- Camera rotation around z. Gizmo changes but camera is locked.
	- Offscreen targets need to render subdisplay using the aspect ratio
- Proper error handling and logging
	- use exceptions?
	- add logging

Long term
- Rigid body and basic physics
- shadows
- water
- boids


Future?
- Use yaml
	- https://github.com/jbeder/yaml-cpp
	- https://github.com/pantoniou/libfyaml


Shadow links
	- https://docs.microsoft.com/en-us/windows/win32/dxtecharts/cascaded-shadow-maps
	- https://docs.microsoft.com/en-us/windows/win32/dxtecharts/common-techniques-to-improve-shadow-depth-maps
	- http://developer.download.nvidia.com/shaderlibrary/docs/shadow_PCSS.pdf
	- https://http.download.nvidia.com/developer/presentations/2005/SIGGRAPH/Percentage_Closer_Soft_Shadows.pdf
	- http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-16-shadow-mapping/
	- https://developer.download.nvidia.com/books/HTML/gpugems/gpugems_ch14.html